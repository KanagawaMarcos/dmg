// <auto-generated />
namespace InspectionServer.Migrations

open System
open Microsoft.EntityFrameworkCore
open Microsoft.EntityFrameworkCore.Infrastructure
open Microsoft.EntityFrameworkCore.Metadata
open Microsoft.EntityFrameworkCore.Migrations
open Microsoft.EntityFrameworkCore.Storage.ValueConversion

[<DbContext(typeof<InspectionModel.InspectionsContext>)>]
[<Migration("20210516013919_Initial")>]
type Initial() =
    inherit Migration()

    override this.Up(migrationBuilder:MigrationBuilder) =
        migrationBuilder.CreateTable(
            name = "Inspections"
            ,columns = (fun table -> 
            {|
                Retail =
                    table.Column<string>(
                        nullable = false
                        ,``type`` = "text"
                    )
                SnowRate =
                    table.Column<int>(
                        nullable = false
                        ,``type`` = "integer"
                    )
                LightingRate =
                    table.Column<int>(
                        nullable = false
                        ,``type`` = "integer"
                    )
                RooftopRate =
                    table.Column<int>(
                        nullable = false
                        ,``type`` = "integer"
                    )
            |})
            ,constraints =
                (fun table -> 
                    table.PrimaryKey("PK_Inspections", (fun x -> (x.Retail) :> obj)) |> ignore
                ) 
        ) |> ignore


    override this.Down(migrationBuilder:MigrationBuilder) =
        migrationBuilder.DropTable(
            name = "Inspections"
            ) |> ignore


    override this.BuildTargetModel(modelBuilder: ModelBuilder) =
        modelBuilder

            .UseIdentityByDefaultColumns().HasAnnotation("Relational:MaxIdentifierLength", 63)
            .HasAnnotation("ProductVersion", "5.0.6")
            |> ignore

        modelBuilder.Entity("InspectionModel+Inspections", (fun b ->

            b.Property<string>("Retail")
                .HasColumnType("text") |> ignore
            b.Property<int>("LightingRate")
                .IsRequired()
                .HasColumnType("integer") |> ignore
            b.Property<int>("RooftopRate")
                .IsRequired()
                .HasColumnType("integer") |> ignore
            b.Property<int>("SnowRate")
                .IsRequired()
                .HasColumnType("integer") |> ignore

            b.HasKey("Retail") |> ignore

            b.ToTable("Inspections") |> ignore

        )) |> ignore

